#include "STD_TYPES.h"
#include "BIT_MATH.h"

#include "RCC_interface.h"
#include "GPIO_interface.h"
#include "STK_interface.h"
#include "ShiftRegister_Interface.h"


const u8 SegValues[10] = {0b0111111,0b0000110,0b1011011,0b1001111,0b1100110,0b1101101,0b1111101,0b0000111,0b1111111,0b1101111};

void main(void)
{
    MRCC_voidInit();
    MRCC_voidEnablePeripheralClock(RCC_AHB1,GPIOA_ID);
    MSTK_voidInit();
    HShiftRegister_voidInit();
    while (1)
    {
    	HShiftRegister_voidSend1ByteDataLow(0);
    	HShiftRegister_voidSend1ByteDataLow(0b0111111);
    	MSTK_voidSetBusyWaitus(100000);
    	HShiftRegister_voidSend1ByteDataLow(0);
    	HShiftRegister_voidSend1ByteDataLow(0b0000110);
		MSTK_voidSetBusyWaitus(100000);
		HShiftRegister_voidSend1ByteDataLow(0);
		HShiftRegister_voidSend1ByteDataLow(0b1011011);
		MSTK_voidSetBusyWaitus(100000);
		HShiftRegister_voidSend1ByteDataLow(0);
		HShiftRegister_voidSend1ByteDataLow(0b1001111);
		MSTK_voidSetBusyWaitus(100000);
		HShiftRegister_voidSend1ByteDataLow(0);
		HShiftRegister_voidSend1ByteDataLow(0b1100110);
		MSTK_voidSetBusyWaitus(100000);
		HShiftRegister_voidSend1ByteDataLow(0);
		HShiftRegister_voidSend1ByteDataLow(0b1111101);
		MSTK_voidSetBusyWaitus(100000);
		HShiftRegister_voidSend1ByteDataLow(0);
		HShiftRegister_voidSend1ByteDataLow(0b0000111);
		MSTK_voidSetBusyWaitus(000000);
		HShiftRegister_voidSend1ByteDataLow(0);
		HShiftRegister_voidSend1ByteDataLow(0b1111111);
		MSTK_voidSetBusyWaitus(100000);
		HShiftRegister_voidSend1ByteDataLow(0);
		HShiftRegister_voidSend1ByteDataLow(0b1101111);
		MSTK_voidSetBusyWaitus(100000);


    }

}
